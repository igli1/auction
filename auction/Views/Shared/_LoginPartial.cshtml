@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@using auction.Models.Database.Entity
@{
    var currentUserId = UserManager.GetUserId(User);
    var currentUser = UserManager.FindByIdAsync(currentUserId).Result; 
    var profileImageName = currentUser?.ProfilePicture;
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="User" asp-action="Profile">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li>
            <a class="nav-link text-dark" asp-controller="User" asp-action="Profile">
                <img src="@Url.Action("GetImage", "ObjectStorage", new { imageName = @profileImageName, isProfile = true })" alt="Profile" width="40" height="40" class="rounded-circle mr-2">
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="User" asp-action="Logout">Logout</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-controller="User" asp-action="RegisterAndLogin">Login Register</a>
        </li>
    }
</ul>